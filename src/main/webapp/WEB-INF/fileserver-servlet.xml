<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

  <aop:aspectj-autoproxy />
  
  <bean id="messageSource"
    class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basename" value="i18n/messages" />
  </bean>

  <!-- 配置文件上传 -->
  <bean id="multipartResolver" 
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="209715200" />  
    <property name="maxInMemorySize" value="20971520" />
  </bean>
  
  <bean id="dataSource"
    class="com.alibaba.druid.pool.DruidDataSource">
    <property name="url" value="jdbc:mysql://202.114.18.242:33066/dadoofile?characterEncoding=utf8" />
    <property name="username" value="root" />
    <property name="password" value="dadoo2012dadoo" />
  </bean>
  
  <bean id="sessionFactory" 
    class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
    p:dataSource-ref="dataSource">
    
    <property name="hibernateProperties">
      <props>
        <prop key="hibernate.dialect">
          org.hibernate.dialect.MySQLDialect
        </prop>
        <prop key="hibernate.show_sql">
          true
        </prop>
        <prop key="hibernate.current_session_context_class">
          org.springframework.orm.hibernate4.SpringSessionContext
        </prop>
      </props>
    </property>
    
    <!-- 注解方式配置 -->
    <property name="packagesToScan">
      <list>
        <value>im.dadoo.fileserver.domain</value> 
      </list> 
    </property>
  </bean>
  
  <bean class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">     
     <property name="sessionFactory">     
      <ref bean="sessionFactory"/>     
     </property>   
  </bean>
  
  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
    <property name="sessionFactory" ref="sessionFactory" />  
  </bean>
  <tx:annotation-driven transaction-manager="transactionManager" /> 

  <bean id = "rootPath" class="java.lang.String">
    <constructor-arg value="D:\fileserver" />
  </bean>
  <bean id="mapper" class="org.codehaus.jackson.map.ObjectMapper" />
  <bean id="logSender" class="im.dadoo.fileserver.log.LogSender">
    <constructor-arg type="java.lang.String">
      <value>http://logs.dadoo.im/log</value>
    </constructor-arg>
  </bean>
  
  <bean id="jedis" class="redis.clients.jedis.Jedis">
    <constructor-arg type="java.lang.String">
      <value>202.114.18.242</value>
    </constructor-arg>
    <constructor-arg type="int">
      <value>6379</value>
    </constructor-arg>
  </bean>
<!--   <mvc:interceptors>
    <mvc:interceptor>
      <mvc:mapping path="/**/" />
      <mvc:exclude-mapping path="/resources/**" />
      <mvc:exclude-mapping path="/static/**" />
      <bean class="im.dadoo.teak.interceptor.VisitLogInterceptor" />
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/admin/**" />
      <bean class="im.dadoo.teak.interceptor.SignInterceptor" />
    </mvc:interceptor>
  </mvc:interceptors> -->
  
  
  
  <!-- Scans within the base package of the application for @Components to 
    configure as beans -->
  <!-- @Controller, @Service, @Configuration, etc. -->
  <context:component-scan base-package="im.dadoo.fileserver" />

<!--   <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" />
  <mvc:resources mapping="/static/**" location="/WEB-INF/static/" /> -->
  <mvc:annotation-driven />

</beans>